hljs.registerLanguage("dylan",(()=>{"use strict";return e=>{
const a="[a-z-+*/^=#!%$_><@?~][a-z0-9-+*/^=#!%$_><@?~]*";return{
case_insensitive:!0,className:"dylan",lexemes:a,keywords:{
literal:"#t #f #next #rest #key #all-keys #include",
keyword:[].concat(["define","end","handler","let","local","macro","otherwise"],["begin","block","case","for","if","method","select","unless","until","while"],[],["class","library","method","module"].map((e=>e+"|2")),["constant","variable","domain"]).join(" ")
},contains:[{className:"class",begin:"<"+a+">",relevance:0},{className:"symbol",
begin:"#"+a},{className:"symbol",begin:a+":",relevance:0},{className:"string",
begin:"'\\\\?.",end:"'",illegal:"."
},e.C_NUMBER_MODE,e.QUOTE_STRING_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]
}}})());