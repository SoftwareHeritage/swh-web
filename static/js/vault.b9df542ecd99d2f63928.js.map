{"version":3,"sources":["webpack://swh.vault/webpack/universalModuleDefinition","webpack://swh.vault/./swh/web/assets/src/bundles/vault/vault-create-tasks.js","webpack://swh.vault/./swh/web/assets/src/bundles/vault/vault-ui.js","webpack://swh.vault/./swh/web/assets/src/utils/functions.js","webpack://swh.vault/./swh/web/assets/src/bundles/vault/vault-table-row.ejs","webpack://swh.vault/webpack/bootstrap","webpack://swh.vault/webpack/startup","webpack://swh.vault/webpack/runtime/compat get default export","webpack://swh.vault/webpack/runtime/define property getters","webpack://swh.vault/webpack/runtime/hasOwnProperty shorthand","webpack://swh.vault/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","alertStyle","vaultRequest","objectType","objectId","vaultUrl","Urls","api_1_vault_cook_directory","api_1_vault_cook_revision_gitfast","fetch","then","response","json","data","exception","status","swh","vault","removeCookingTaskInfo","$","modal","cookingServiceDownAlert","htmlAlert","css","append","addVaultCookingTask","cookingTask","swhidsContext","webapp","getSwhIdsContext","origin","object_type","context","path","browse_url","swhid_with_context_url","swhid_url","cookingUrl","vaultCookingTasks","JSON","parse","localStorage","getItem","undefined","find","val","object_id","email","csrfPost","handleFetchError","push","setItem","stringify","cookingTaskCreatedAlert","browse_vault","cookingTaskFailedAlert","validateEmail","test","String","toLowerCase","cookDirectoryArchive","directoryId","trim","fetchDirectoryArchive","fetchCookedObject","fetch_url","cookRevisionArchive","revisionId","fetchRevisionArchive","checkVaultId","recookTask","pollingInterval","updateProgressBar","progressBar","text","progress_message","addClass","removeClass","fetchUrl","ok","attr","i","length","recookObject","clearTimeout","checkVaultCookingTasks","remove","setTimeout","cookingTaskRequests","tasks","currentObjectIds","each","row","inArray","Promise","all","handleFetchErrors","responses","map","r","cookingTasks","table","obj_id","rowTask","downloadLink","innerHTML","browseUrl","browse_directory","browse_revision","parseHTML","prepend","vaultTableRowTemplate","error","console","log","tasksToRemove","grep","task","initUi","change","event","prop","currentTarget","checked","click","window","onfocus","url","headers","body","Cookies","get","credentials","method","type","message","closable","closeButton","extraClasses","anonymous","locals","escapeFn","include","rethrow","markup","replace","_MATCH_HTML","encode_char","_ENCODE_HTML_RULES","c","__output","__append","s","browse_origin","decodeURIComponent","getSwhObjectIcon","outerHTML","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","obj","prototype","hasOwnProperty","call","Symbol","toStringTag","value"],"mappings":"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","file":"js/vault.b9df542ecd99d2f63928.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"swh\"] = factory();\n\telse\n\t\troot[\"swh\"] = root[\"swh\"] || {}, root[\"swh\"][\"vault\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (C) 2018-2019  The Software Heritage developers\n * See the AUTHORS file at the top-level directory of this distribution\n * License: GNU Affero General Public License version 3, or any later version\n * See top-level LICENSE file for more information\n */\n\nimport {handleFetchError, csrfPost, htmlAlert} from 'utils/functions';\n\nconst alertStyle = {\n  'position': 'fixed',\n  'left': '1rem',\n  'bottom': '1rem',\n  'z-index': '100000'\n};\n\nexport function vaultRequest(objectType, objectId) {\n  let vaultUrl;\n  if (objectType === 'directory') {\n    vaultUrl = Urls.api_1_vault_cook_directory(objectId);\n  } else {\n    vaultUrl = Urls.api_1_vault_cook_revision_gitfast(objectId);\n  }\n  // check if object has already been cooked\n  fetch(vaultUrl)\n    .then(response => response.json())\n    .then(data => {\n      // object needs to be cooked\n      if (data.exception === 'NotFoundExc' || data.status === 'failed') {\n        // if last cooking has failed, remove previous task info from localStorage\n        // in order to force the recooking of the object\n        swh.vault.removeCookingTaskInfo([objectId]);\n        $(`#vault-cook-${objectType}-modal`).modal('show');\n      // object has been cooked and should be in the vault cache,\n      // it will be asked to cook it again if it is not\n      } else if (data.status === 'done') {\n        $(`#vault-fetch-${objectType}-modal`).modal('show');\n      } else {\n        const cookingServiceDownAlert =\n          $(htmlAlert('danger',\n                      'Archive cooking service is currently experiencing issues.<br/>' +\n                      'Please try again later.',\n                      true));\n        cookingServiceDownAlert.css(alertStyle);\n        $('body').append(cookingServiceDownAlert);\n      }\n    });\n}\n\nfunction addVaultCookingTask(cookingTask) {\n\n  const swhidsContext = swh.webapp.getSwhIdsContext();\n  cookingTask.origin = swhidsContext[cookingTask.object_type].context.origin;\n  cookingTask.path = swhidsContext[cookingTask.object_type].context.path;\n  cookingTask.browse_url = swhidsContext[cookingTask.object_type].swhid_with_context_url;\n  if (!cookingTask.browse_url) {\n    cookingTask.browse_url = swhidsContext[cookingTask.object_type].swhid_url;\n  }\n\n  let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n  if (!vaultCookingTasks) {\n    vaultCookingTasks = [];\n  }\n  if (vaultCookingTasks.find(val => {\n    return val.object_type === cookingTask.object_type &&\n            val.object_id === cookingTask.object_id;\n  }) === undefined) {\n    let cookingUrl;\n    if (cookingTask.object_type === 'directory') {\n      cookingUrl = Urls.api_1_vault_cook_directory(cookingTask.object_id);\n    } else {\n      cookingUrl = Urls.api_1_vault_cook_revision_gitfast(cookingTask.object_id);\n    }\n    if (cookingTask.email) {\n      cookingUrl += '?email=' + cookingTask.email;\n    }\n\n    csrfPost(cookingUrl)\n      .then(handleFetchError)\n      .then(() => {\n        vaultCookingTasks.push(cookingTask);\n        localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n        $('#vault-cook-directory-modal').modal('hide');\n        $('#vault-cook-revision-modal').modal('hide');\n        const cookingTaskCreatedAlert =\n          $(htmlAlert('success',\n                      'Archive cooking request successfully submitted.<br/>' +\n                      `Go to the <a href=\"${Urls.browse_vault()}\">Downloads</a> page ` +\n                      'to get the download link once it is ready.',\n                      true));\n        cookingTaskCreatedAlert.css(alertStyle);\n        $('body').append(cookingTaskCreatedAlert);\n      })\n      .catch(() => {\n        $('#vault-cook-directory-modal').modal('hide');\n        $('#vault-cook-revision-modal').modal('hide');\n        const cookingTaskFailedAlert =\n          $(htmlAlert('danger',\n                      'Archive cooking request submission failed.',\n                      true));\n        cookingTaskFailedAlert.css(alertStyle);\n        $('body').append(cookingTaskFailedAlert);\n      });\n  }\n}\n\nfunction validateEmail(email) {\n  let re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport function cookDirectoryArchive(directoryId) {\n  let email = $('#swh-vault-directory-email').val().trim();\n  if (!email || validateEmail(email)) {\n    let cookingTask = {\n      'object_type': 'directory',\n      'object_id': directoryId,\n      'email': email,\n      'status': 'new'\n    };\n    addVaultCookingTask(cookingTask);\n\n  } else {\n    $('#invalid-email-modal').modal('show');\n  }\n}\n\nexport function fetchDirectoryArchive(directoryId) {\n  $('#vault-fetch-directory-modal').modal('hide');\n  const vaultUrl = Urls.api_1_vault_cook_directory(directoryId);\n  fetch(vaultUrl)\n    .then(response => response.json())\n    .then(data => {\n      swh.vault.fetchCookedObject(data.fetch_url);\n    });\n}\n\nexport function cookRevisionArchive(revisionId) {\n  let email = $('#swh-vault-revision-email').val().trim();\n  if (!email || validateEmail(email)) {\n    let cookingTask = {\n      'object_type': 'revision',\n      'object_id': revisionId,\n      'email': email,\n      'status': 'new'\n    };\n    addVaultCookingTask(cookingTask);\n  } else {\n    $('#invalid-email-modal').modal('show');\n  }\n}\n\nexport function fetchRevisionArchive(revisionId) {\n  $('#vault-fetch-directory-modal').modal('hide');\n  const vaultUrl = Urls.api_1_vault_cook_revision_gitfast(revisionId);\n  fetch(vaultUrl)\n    .then(response => response.json())\n    .then(data => {\n      swh.vault.fetchCookedObject(data.fetch_url);\n    });\n}\n","/**\n * Copyright (C) 2018-2019  The Software Heritage developers\n * See the AUTHORS file at the top-level directory of this distribution\n * License: GNU Affero General Public License version 3, or any later version\n * See top-level LICENSE file for more information\n */\n\nimport {handleFetchError, handleFetchErrors, csrfPost} from 'utils/functions';\nimport vaultTableRowTemplate from './vault-table-row.ejs';\n\nlet progress =\n  `<div class=\"progress\">\n    <div class=\"progress-bar progress-bar-success progress-bar-striped\"\n          role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n          aria-valuemax=\"100\" style=\"width: 100%;height: 100%;\">\n    </div>\n  </div>;`;\n\nlet pollingInterval = 5000;\nlet checkVaultId;\n\nfunction updateProgressBar(progressBar, cookingTask) {\n  if (cookingTask.status === 'new') {\n    progressBar.css('background-color', 'rgba(128, 128, 128, 0.5)');\n  } else if (cookingTask.status === 'pending') {\n    progressBar.css('background-color', 'rgba(0, 0, 255, 0.5)');\n  } else if (cookingTask.status === 'done') {\n    progressBar.css('background-color', '#5cb85c');\n  } else if (cookingTask.status === 'failed') {\n    progressBar.css('background-color', 'rgba(255, 0, 0, 0.5)');\n    progressBar.css('background-image', 'none');\n  }\n  progressBar.text(cookingTask.progress_message || cookingTask.status);\n  if (cookingTask.status === 'new' || cookingTask.status === 'pending') {\n    progressBar.addClass('progress-bar-animated');\n  } else {\n    progressBar.removeClass('progress-bar-striped');\n  }\n}\n\nlet recookTask;\n\n// called when the user wants to download a cooked archive\nexport function fetchCookedObject(fetchUrl) {\n  recookTask = null;\n  // first, check if the link is still available from the vault\n  fetch(fetchUrl)\n    .then(response => {\n      // link is still alive, proceed to download\n      if (response.ok) {\n        $('#vault-fetch-iframe').attr('src', fetchUrl);\n      // link is dead\n      } else {\n        // get the associated cooking task\n        let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n        for (let i = 0; i < vaultCookingTasks.length; ++i) {\n          if (vaultCookingTasks[i].fetch_url === fetchUrl) {\n            recookTask = vaultCookingTasks[i];\n            break;\n          }\n        }\n        // display a modal asking the user if he wants to recook the archive\n        $('#vault-recook-object-modal').modal('show');\n      }\n    });\n}\n\n// called when the user wants to recook an archive\n// for which the download link is not available anymore\nexport function recookObject() {\n  if (recookTask) {\n    // stop cooking tasks status polling\n    clearTimeout(checkVaultId);\n    // build cook request url\n    let cookingUrl;\n    if (recookTask.object_type === 'directory') {\n      cookingUrl = Urls.api_1_vault_cook_directory(recookTask.object_id);\n    } else {\n      cookingUrl = Urls.api_1_vault_cook_revision_gitfast(recookTask.object_id);\n    }\n    if (recookTask.email) {\n      cookingUrl += '?email=' + recookTask.email;\n    }\n    // request archive cooking\n    csrfPost(cookingUrl)\n      .then(handleFetchError)\n      .then(() => {\n        // update task status\n        recookTask.status = 'new';\n        let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n        for (let i = 0; i < vaultCookingTasks.length; ++i) {\n          if (vaultCookingTasks[i].object_id === recookTask.object_id) {\n            vaultCookingTasks[i] = recookTask;\n            break;\n          }\n        }\n        // save updated tasks to local storage\n        localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n        // restart cooking tasks status polling\n        checkVaultCookingTasks();\n        // hide recook archive modal\n        $('#vault-recook-object-modal').modal('hide');\n      })\n      // something went wrong\n      .catch(() => {\n        checkVaultCookingTasks();\n        $('#vault-recook-object-modal').modal('hide');\n      });\n  }\n}\n\nfunction checkVaultCookingTasks() {\n  let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n  if (!vaultCookingTasks || vaultCookingTasks.length === 0) {\n    $('.swh-vault-table tbody tr').remove();\n    checkVaultId = setTimeout(checkVaultCookingTasks, pollingInterval);\n    return;\n  }\n  let cookingTaskRequests = [];\n  let tasks = {};\n  let currentObjectIds = [];\n\n  for (let i = 0; i < vaultCookingTasks.length; ++i) {\n    let cookingTask = vaultCookingTasks[i];\n    currentObjectIds.push(cookingTask.object_id);\n    tasks[cookingTask.object_id] = cookingTask;\n    let cookingUrl;\n    if (cookingTask.object_type === 'directory') {\n      cookingUrl = Urls.api_1_vault_cook_directory(cookingTask.object_id);\n    } else {\n      cookingUrl = Urls.api_1_vault_cook_revision_gitfast(cookingTask.object_id);\n    }\n    if (cookingTask.status !== 'done' && cookingTask.status !== 'failed') {\n      cookingTaskRequests.push(fetch(cookingUrl));\n    }\n  }\n  $('.swh-vault-table tbody tr').each((i, row) => {\n    let objectId = $(row).find('.vault-object-info').data('object-id');\n    if ($.inArray(objectId, currentObjectIds) === -1) {\n      $(row).remove();\n    }\n  });\n  Promise.all(cookingTaskRequests)\n    .then(handleFetchErrors)\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(cookingTasks => {\n      let table = $('#vault-cooking-tasks tbody');\n      for (let i = 0; i < cookingTasks.length; ++i) {\n        let cookingTask = tasks[cookingTasks[i].obj_id];\n        cookingTask.status = cookingTasks[i].status;\n        cookingTask.fetch_url = cookingTasks[i].fetch_url;\n        cookingTask.progress_message = cookingTasks[i].progress_message;\n      }\n      for (let i = 0; i < vaultCookingTasks.length; ++i) {\n        let cookingTask = vaultCookingTasks[i];\n        let rowTask = $(`#vault-task-${cookingTask.object_id}`);\n\n        if (!rowTask.length) {\n\n          let browseUrl = cookingTask.browse_url;\n          if (!browseUrl) {\n            if (cookingTask.object_type === 'directory') {\n              browseUrl = Urls.browse_directory(cookingTask.object_id);\n            } else {\n              browseUrl = Urls.browse_revision(cookingTask.object_id);\n            }\n          }\n\n          let progressBar = $.parseHTML(progress)[0];\n          let progressBarContent = $(progressBar).find('.progress-bar');\n          updateProgressBar(progressBarContent, cookingTask);\n          table.prepend(vaultTableRowTemplate({\n            browseUrl: browseUrl,\n            cookingTask: cookingTask,\n            progressBar: progressBar,\n            Urls: Urls,\n            swh: swh\n          }));\n        } else {\n          let progressBar = rowTask.find('.progress-bar');\n          updateProgressBar(progressBar, cookingTask);\n          let downloadLink = rowTask.find('.vault-dl-link');\n          if (cookingTask.status === 'done') {\n            downloadLink[0].innerHTML =\n              '<button class=\"btn btn-default btn-sm\" ' +\n              `onclick=\"swh.vault.fetchCookedObject('${cookingTask.fetch_url}')\">` +\n              '<i class=\"mdi mdi-download mdi-fw\" aria-hidden=\"true\"></i>Download</button>';\n          } else {\n            downloadLink[0].innerHTML = '';\n          }\n        }\n      }\n      localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n      checkVaultId = setTimeout(checkVaultCookingTasks, pollingInterval);\n    })\n    .catch(error => {\n      console.log('Error when fetching vault cooking tasks:', error);\n    });\n}\n\nexport function removeCookingTaskInfo(tasksToRemove) {\n  let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n  if (!vaultCookingTasks) {\n    return;\n  }\n  vaultCookingTasks = $.grep(vaultCookingTasks, task => {\n    return $.inArray(task.object_id, tasksToRemove) === -1;\n  });\n  localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n}\n\nexport function initUi() {\n\n  $('#vault-tasks-toggle-selection').change(event => {\n    $('.vault-task-toggle-selection').prop('checked', event.currentTarget.checked);\n  });\n\n  $('#vault-remove-tasks').click(() => {\n    clearTimeout(checkVaultId);\n    let tasksToRemove = [];\n    $('.swh-vault-table tbody tr').each((i, row) => {\n      let taskSelected = $(row).find('.vault-task-toggle-selection').prop('checked');\n      if (taskSelected) {\n        let objectId = $(row).find('.vault-object-info').data('object-id');\n        tasksToRemove.push(objectId);\n        $(row).remove();\n      }\n    });\n    removeCookingTaskInfo(tasksToRemove);\n    $('#vault-tasks-toggle-selection').prop('checked', false);\n    checkVaultId = setTimeout(checkVaultCookingTasks, pollingInterval);\n  });\n\n  checkVaultCookingTasks();\n\n  window.onfocus = () => {\n    clearTimeout(checkVaultId);\n    checkVaultCookingTasks();\n  };\n\n}\n","/**\n * Copyright (C) 2018-2020  The Software Heritage developers\n * See the AUTHORS file at the top-level directory of this distribution\n * License: GNU Affero General Public License version 3, or any later version\n * See top-level LICENSE file for more information\n */\n\n// utility functions\n\nexport function handleFetchError(response) {\n  if (!response.ok) {\n    throw response;\n  }\n  return response;\n}\n\nexport function handleFetchErrors(responses) {\n  for (let i = 0; i < responses.length; ++i) {\n    if (!responses[i].ok) {\n      throw responses[i];\n    }\n  }\n  return responses;\n}\n\nexport function staticAsset(asset) {\n  return `${__STATIC__}${asset}`;\n}\n\nexport function csrfPost(url, headers = {}, body = null) {\n  headers['X-CSRFToken'] = Cookies.get('csrftoken');\n  return fetch(url, {\n    credentials: 'include',\n    headers: headers,\n    method: 'POST',\n    body: body\n  });\n}\n\nexport function isGitRepoUrl(url, pathPrefix = '/') {\n  let allowedProtocols = ['http:', 'https:', 'git:'];\n  if (allowedProtocols.find(protocol => protocol === url.protocol) === undefined) {\n    return false;\n  }\n  if (!url.pathname.startsWith(pathPrefix)) {\n    return false;\n  }\n  let re = new RegExp('[\\\\w\\\\.-]+\\\\/?(?!=.git)(?:\\\\.git\\\\/?)?$');\n  return re.test(url.pathname.slice(pathPrefix.length));\n};\n\nexport function removeUrlFragment() {\n  history.replaceState('', document.title, window.location.pathname + window.location.search);\n}\n\nexport function selectText(startNode, endNode) {\n  let selection = window.getSelection();\n  selection.removeAllRanges();\n  let range = document.createRange();\n  range.setStart(startNode, 0);\n  if (endNode.nodeName !== '#text') {\n    range.setEnd(endNode, endNode.childNodes.length);\n  } else {\n    range.setEnd(endNode, endNode.textContent.length);\n  }\n  selection.addRange(range);\n}\n\nexport function htmlAlert(type, message, closable = false) {\n  let closeButton = '';\n  let extraClasses = '';\n  if (closable) {\n    closeButton =\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>`;\n    extraClasses = 'alert-dismissible';\n  }\n  return `<div class=\"alert alert-${type} ${extraClasses}\" role=\"alert\">${message}${closeButton}</div>`;\n}\n","module.exports = function anonymous(locals, escapeFn, include, rethrow\n) {\nescapeFn = escapeFn || function (markup) {\n  return markup == undefined\n    ? ''\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nvar _ENCODE_HTML_RULES = {\n      \"&\": \"&amp;\"\n    , \"<\": \"&lt;\"\n    , \">\": \"&gt;\"\n    , '\"': \"&#34;\"\n    , \"'\": \"&#39;\"\n    }\n  , _MATCH_HTML = /[&<>'\"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n;\n  var __output = \"\";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n  with (locals || {}) {\n    ; __append(\"\\n\\n\")\n    ;  if (cookingTask.object_type === 'directory') { \n    ; __append(\"\\n  <tr id=\\\"vault-task-\")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\"\\\" title=\\\"Once downloaded, the directory can be extracted with the following command:\\n\\n$ tar xvzf \")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\".tar.gz\\\">\\n\")\n    ;  } else { \n    ; __append(\"\\n  </tr><tr id=\\\"vault-task-\")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\"\\\" title=\\\"Once downloaded, the git repository can be imported with the following commands:\\n\\n$ git init\\n$ zcat \")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\".gitfast.gz | git fast-import\\\">\\n\")\n    ;  } \n    ; __append(\"\\n    <td>\\n      <div class=\\\"custom-control custom-checkbox\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"custom-control-input vault-task-toggle-selection\\\" id=\\\"vault-task-toggle-selection-\")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\"\\\">\\n      <label class=\\\"custom-control-label\\\" for=\\\"vault-task-toggle-selection-\")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\"\\\">\\n      </label>\\n    </div></td>\\n    \")\n    ;  if (cookingTask.origin) { \n    ; __append(\"\\n      <td class=\\\"vault-origin\\\">\\n        <a href=\\\"\")\n    ; __append(escapeFn( Urls.browse_origin() ))\n    ; __append(\"?origin_url=\")\n    ; __append(escapeFn( cookingTask.origin ))\n    ; __append(\"\\\">\\n          \")\n    ; __append(escapeFn( decodeURIComponent(cookingTask.origin) ))\n    ; __append(\"\\n        </a>\\n      </td>\\n    \")\n    ;  } else { \n    ; __append(\"\\n      <td class=\\\"vault-origin\\\">unknown</td>\\n    \")\n    ;  } \n    ; __append(\"\\n    <td>\\n      <i class=\\\"\")\n    ; __append(escapeFn( swh.webapp.getSwhObjectIcon(cookingTask.object_type) ))\n    ; __append(\" mdi-fw\\\"></i>\\n      \")\n    ; __append(escapeFn( cookingTask.object_type ))\n    ; __append(\"\\n    </td>\\n    <td class=\\\"vault-object-info\\\" data-object-id=\\\"\")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\"\\\">\\n      <b>id:</b>&nbsp;<a href=\\\"\")\n    ; __append(escapeFn( browseUrl ))\n    ; __append(\"\\\">\")\n    ; __append(escapeFn( cookingTask.object_id ))\n    ; __append(\"</a>\\n      \")\n    ;  if (cookingTask.path) { \n    ; __append(\"\\n        <br><b>path:</b>&nbsp;\")\n    ; __append(escapeFn( cookingTask.path ))\n    ; __append(\"\\n      \")\n    ;  } \n    ; __append(\"\\n    </td>\\n    <td>\")\n    ; __append( progressBar.outerHTML )\n    ; __append(\"</td>\\n    <td class=\\\"vault-dl-link\\\">\\n      \")\n    ;  if (cookingTask.status === 'done') { \n    ; __append(\"\\n        <button class=\\\"btn btn-default btn-sm\\\" onclick=\\\"swh.vault.fetchCookedObject('\")\n    ; __append(escapeFn( cookingTask.fetch_url ))\n    ; __append(\"')\\\">\\n          <i class=\\\"mdi mdi-download mdi-fw\\\" aria-hidden=\\\"true\\\"></i>Download\\n        </button>\\n      \")\n    ;  } \n    ; __append(\"\\n    </td>\\n  </tr>\")\n  }\n  return __output;\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(83202);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}