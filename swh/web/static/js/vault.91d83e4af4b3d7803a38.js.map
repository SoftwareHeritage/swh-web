{"version":3,"sources":["webpack://swh.[name]/webpack/universalModuleDefinition","webpack://swh.[name]/webpack/bootstrap","webpack://swh.[name]/./swh/web/assets/src/utils/functions.js","webpack://swh.[name]/./swh/web/assets/src/bundles/vault/vault-ui.js","webpack://swh.[name]/./swh/web/assets/src/bundles/vault/vault-create-tasks.js","webpack://swh.[name]/./swh/web/assets/src/bundles/vault/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","handleFetchError","response","ok","handleFetchErrors","responses","length","staticAsset","asset","__webpack_exports__","progress","pollingInterval","checkVaultId","updateProgressBar","progressBar","cookingTask","status","css","text","progress_message","addClass","removeClass","recookTask","fetchCookedObject","fetchUrl","fetch","credentials","then","$","attr","vaultCookingTasks","JSON","parse","localStorage","getItem","fetch_url","modal","recookObject","clearTimeout","cookingUrl","object_type","Urls","vault_cook_directory","object_id","vault_cook_revision_gitfast","email","method","functions","setItem","stringify","checkVaultCookingTasks","catch","remove","setTimeout","cookingTaskRequests","tasks","currentObjectIds","push","each","row","objectId","find","data","inArray","Promise","all","map","json","cookingTasks","table","obj_id","rowTask","downloadLink","innerHTML","browseUrl","browse_directory","browse_revision","parseHTML","tableRow","outerHTML","prepend","initUi","change","event","prop","currentTarget","checked","click","tasksToRemove","grep","task","document","on","e","trim","onfocus","addVaultCookingTask","undefined","val","location","browse_vault","validateEmail","test","String","toLowerCase","cookDirectoryArchive","directoryId","cookRevisionArchive","revisionId","initTaskCreationUi","ready","append"],"mappings":"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","file":"js/vault.91d83e4af4b3d7803a38.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vault\"] = factory();\n\telse\n\t\troot[\"swh\"] = root[\"swh\"] || {}, root[\"swh\"][\"vault\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 456);\n","/**\n * Copyright (C) 2018  The Software Heritage developers\n * See the AUTHORS file at the top-level directory of this distribution\n * License: GNU Affero General Public License version 3, or any later version\n * See top-level LICENSE file for more information\n */\n\n// utility functions\n\nexport function handleFetchError(response) {\n  if (!response.ok) {\n    throw response;\n  }\n  return response;\n}\n\nexport function handleFetchErrors(responses) {\n  for (let i = 0; i < responses.length; ++i) {\n    if (!responses[i].ok) {\n      throw responses[i];\n    }\n  }\n  return responses;\n}\n\nexport function staticAsset(asset) {\n  return `${__STATIC__}${asset}`;\n}\n","/**\n * Copyright (C) 2018  The Software Heritage developers\n * See the AUTHORS file at the top-level directory of this distribution\n * License: GNU Affero General Public License version 3, or any later version\n * See top-level LICENSE file for more information\n */\n\nimport {handleFetchError, handleFetchErrors} from 'utils/functions';\n\nlet progress = `<div class=\"progress\">\n                  <div class=\"progress-bar progress-bar-success progress-bar-striped\"\n                       role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                       aria-valuemax=\"100\" style=\"width: 100%;height: 100%;\">\n                  </div>\n                </div>;`;\n\nlet pollingInterval = 5000;\nlet checkVaultId;\n\nfunction updateProgressBar(progressBar, cookingTask) {\n  if (cookingTask.status === 'new') {\n    progressBar.css('background-color', 'rgba(128, 128, 128, 0.5)');\n  } else if (cookingTask.status === 'pending') {\n    progressBar.css('background-color', 'rgba(0, 0, 255, 0.5)');\n  } else if (cookingTask.status === 'done') {\n    progressBar.css('background-color', '#5cb85c');\n  } else if (cookingTask.status === 'failed') {\n    progressBar.css('background-color', 'rgba(255, 0, 0, 0.5)');\n    progressBar.css('background-image', 'none');\n  }\n  progressBar.text(cookingTask.progress_message || cookingTask.status);\n  if (cookingTask.status === 'new' || cookingTask.status === 'pending') {\n    progressBar.addClass('progress-bar-animated');\n  } else {\n    progressBar.removeClass('progress-bar-striped');\n  }\n}\n\nlet recookTask;\n\n// called when the user wants to download a cooked archive\nexport function fetchCookedObject(fetchUrl) {\n  recookTask = null;\n  // first, check if the link is still available from the vault\n  fetch(fetchUrl, {credentials: 'same-origin'})\n    .then(response => {\n      // link is still alive, proceed to download\n      if (response.ok) {\n        $('#vault-fetch-iframe').attr('src', fetchUrl);\n      // link is dead\n      } else {\n        // get the associated cooking task\n        let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n        for (let i = 0; i < vaultCookingTasks.length; ++i) {\n          if (vaultCookingTasks[i].fetch_url === fetchUrl) {\n            recookTask = vaultCookingTasks[i];\n            break;\n          }\n        }\n        // display a modal asking the user if he wants to recook the archive\n        $('#vault-recook-object-modal').modal('show');\n      }\n    });\n}\n\n// called when the user wants to recook an archive\n// for which the download link is not available anymore\nexport function recookObject() {\n  if (recookTask) {\n    // stop cookink tasks status polling\n    clearTimeout(checkVaultId);\n    // build cook request url\n    let cookingUrl;\n    if (recookTask.object_type === 'directory') {\n      cookingUrl = Urls.vault_cook_directory(recookTask.object_id);\n    } else {\n      cookingUrl = Urls.vault_cook_revision_gitfast(recookTask.object_id);\n    }\n    if (recookTask.email) {\n      cookingUrl += '?email=' + recookTask.email;\n    }\n    // request archive cooking\n    fetch(cookingUrl, {credentials: 'same-origin', method: 'POST'})\n      .then(handleFetchError)\n      .then(() => {\n        // update task status\n        recookTask.status = 'new';\n        let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n        for (let i = 0; i < vaultCookingTasks.length; ++i) {\n          if (vaultCookingTasks[i].object_id === recookTask.object_id) {\n            vaultCookingTasks[i] = recookTask;\n            break;\n          }\n        }\n        // save updated tasks to local storage\n        localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n        // restart cooking tasks status polling\n        checkVaultCookingTasks();\n        // hide recook archive modal\n        $('#vault-recook-object-modal').modal('hide');\n      })\n      // something went wrong\n      .catch(() => {\n        checkVaultCookingTasks();\n        $('#vault-recook-object-modal').modal('hide');\n      });\n  }\n}\n\nfunction checkVaultCookingTasks() {\n  let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n  if (!vaultCookingTasks || vaultCookingTasks.length === 0) {\n    $('.swh-vault-table tbody tr').remove();\n    checkVaultId = setTimeout(checkVaultCookingTasks, pollingInterval);\n    return;\n  }\n  let cookingTaskRequests = [];\n  let tasks = {};\n  let currentObjectIds = [];\n\n  for (let i = 0; i < vaultCookingTasks.length; ++i) {\n    let cookingTask = vaultCookingTasks[i];\n    currentObjectIds.push(cookingTask.object_id);\n    tasks[cookingTask.object_id] = cookingTask;\n    let cookingUrl;\n    if (cookingTask.object_type === 'directory') {\n      cookingUrl = Urls.vault_cook_directory(cookingTask.object_id);\n    } else {\n      cookingUrl = Urls.vault_cook_revision_gitfast(cookingTask.object_id);\n    }\n    if (cookingTask.status !== 'done' && cookingTask.status !== 'failed') {\n      cookingTaskRequests.push(fetch(cookingUrl, {credentials: 'same-origin'}));\n    }\n  }\n  $('.swh-vault-table tbody tr').each((i, row) => {\n    let objectId = $(row).find('.vault-object-id').data('object-id');\n    if ($.inArray(objectId, currentObjectIds) === -1) {\n      $(row).remove();\n    }\n  });\n  Promise.all(cookingTaskRequests)\n    .then(handleFetchErrors)\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(cookingTasks => {\n      let table = $('#vault-cooking-tasks tbody');\n      for (let i = 0; i < cookingTasks.length; ++i) {\n        let cookingTask = tasks[cookingTasks[i].obj_id];\n        cookingTask.status = cookingTasks[i].status;\n        cookingTask.fetch_url = cookingTasks[i].fetch_url;\n        cookingTask.progress_message = cookingTasks[i].progress_message;\n      }\n      for (let i = 0; i < vaultCookingTasks.length; ++i) {\n        let cookingTask = vaultCookingTasks[i];\n\n        let rowTask = $('#vault-task-' + cookingTask.object_id);\n\n        let downloadLinkWait = 'Waiting for download link to be available';\n        if (!rowTask.length) {\n\n          let browseUrl;\n          if (cookingTask.object_type === 'directory') {\n            browseUrl = Urls.browse_directory(cookingTask.object_id);\n          } else {\n            browseUrl = Urls.browse_revision(cookingTask.object_id);\n          }\n\n          let progressBar = $.parseHTML(progress)[0];\n          let progressBarContent = $(progressBar).find('.progress-bar');\n          updateProgressBar(progressBarContent, cookingTask);\n          let tableRow;\n          if (cookingTask.object_type === 'directory') {\n            tableRow = `<tr id=\"vault-task-${cookingTask.object_id}\" title=\"Once downloaded, the directory can be extracted with the ` +\n                       `following command:\\n\\n$ tar xvzf ${cookingTask.object_id}.tar.gz\">`;\n          } else {\n            tableRow = `<tr id=\"vault-task-${cookingTask.object_id}\"  title=\"Once downloaded, the git repository can be imported with the ` +\n                       `following commands:\\n\\n$ git init\\n$ zcat ${cookingTask.object_id}.gitfast.gz | git fast-import\">`;\n          }\n          tableRow += '<td><input type=\"checkbox\" class=\"vault-task-toggle-selection\"/></td>';\n          if (cookingTask.object_type === 'directory') {\n            tableRow += '<td style=\"width: 120px\"><i class=\"fa fa-folder fa-fw\" aria-hidden=\"true\"></i>directory</td>';\n          } else {\n            tableRow += '<td style=\"width: 120px\"><i class=\"octicon octicon-git-commit fa-fw\"></i>revision</td>';\n          }\n          tableRow += `<td class=\"vault-object-id\" data-object-id=\"${cookingTask.object_id}\"><a href=\"${browseUrl}\">${cookingTask.object_id}</a></td>`;\n          tableRow += `<td style=\"width: 350px\">${progressBar.outerHTML}</td>`;\n          let downloadLink = downloadLinkWait;\n          if (cookingTask.status === 'done') {\n            downloadLink = `<button class=\"btn btn-default btn-sm\" onclick=\"swh.vault.fetchCookedObject('${cookingTask.fetch_url}')` +\n                           '\"><i class=\"fa fa-download fa-fw\" aria-hidden=\"true\"></i>Download</button>';\n          } else if (cookingTask.status === 'failed') {\n            downloadLink = '';\n          }\n          tableRow += `<td class=\"vault-dl-link\" style=\"width: 320px\">${downloadLink}</td>`;\n          tableRow += '</tr>';\n          table.prepend(tableRow);\n        } else {\n          let progressBar = rowTask.find('.progress-bar');\n          updateProgressBar(progressBar, cookingTask);\n          let downloadLink = rowTask.find('.vault-dl-link');\n          if (cookingTask.status === 'done') {\n            downloadLink[0].innerHTML = `<button class=\"btn btn-default btn-sm\" onclick=\"swh.vault.fetchCookedObject('${cookingTask.fetch_url}')` +\n                                        '\"><i class=\"fa fa-download fa-fw\" aria-hidden=\"true\"></i>Download</button>';\n          } else if (cookingTask.status === 'failed') {\n            downloadLink[0].innerHTML = '';\n          } else if (cookingTask.status === 'new') {\n            downloadLink[0].innerHTML = downloadLinkWait;\n          }\n        }\n      }\n      localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n      checkVaultId = setTimeout(checkVaultCookingTasks, pollingInterval);\n    })\n    .catch(() => {});\n}\n\nexport function initUi() {\n\n  $('#vault-tasks-toggle-selection').change(event => {\n    $('.vault-task-toggle-selection').prop('checked', event.currentTarget.checked);\n  });\n\n  $('#vault-remove-tasks').click(() => {\n    clearTimeout(checkVaultId);\n    let tasksToRemove = [];\n    $('.swh-vault-table tbody tr').each((i, row) => {\n      let taskSelected = $(row).find('.vault-task-toggle-selection').prop('checked');\n      if (taskSelected) {\n        let objectId = $(row).find('.vault-object-id').data('object-id');\n        tasksToRemove.push(objectId);\n        $(row).remove();\n      }\n    });\n    let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n    vaultCookingTasks = $.grep(vaultCookingTasks, task => {\n      return $.inArray(task.object_id, tasksToRemove) === -1;\n    });\n    localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n    $('#vault-tasks-toggle-selection').prop('checked', false);\n    checkVaultId = setTimeout(checkVaultCookingTasks, pollingInterval);\n  });\n\n  checkVaultId = setTimeout(checkVaultCookingTasks, pollingInterval);\n\n  $(document).on('shown.bs.tab', 'a[data-toggle=\"tab\"]', e => {\n    if (e.currentTarget.text.trim() === 'Vault') {\n      clearTimeout(checkVaultId);\n      checkVaultCookingTasks();\n    }\n  });\n\n  window.onfocus = () => {\n    clearTimeout(checkVaultId);\n    checkVaultCookingTasks();\n  };\n\n}\n","/**\n * Copyright (C) 2018  The Software Heritage developers\n * See the AUTHORS file at the top-level directory of this distribution\n * License: GNU Affero General Public License version 3, or any later version\n * See top-level LICENSE file for more information\n */\n\nimport {handleFetchError} from 'utils/functions';\n\nfunction addVaultCookingTask(cookingTask) {\n  let vaultCookingTasks = JSON.parse(localStorage.getItem('swh-vault-cooking-tasks'));\n  if (!vaultCookingTasks) {\n    vaultCookingTasks = [];\n  }\n  if (vaultCookingTasks.find(val => {\n    return val.object_type === cookingTask.object_type &&\n            val.object_id === cookingTask.object_id;\n  }) === undefined) {\n    let cookingUrl;\n    if (cookingTask.object_type === 'directory') {\n      cookingUrl = Urls.vault_cook_directory(cookingTask.object_id);\n    } else {\n      cookingUrl = Urls.vault_cook_revision_gitfast(cookingTask.object_id);\n    }\n    if (cookingTask.email) {\n      cookingUrl += '?email=' + cookingTask.email;\n    }\n    fetch(cookingUrl, {credentials: 'same-origin', method: 'POST'})\n      .then(handleFetchError)\n      .then(() => {\n        vaultCookingTasks.push(cookingTask);\n        localStorage.setItem('swh-vault-cooking-tasks', JSON.stringify(vaultCookingTasks));\n        $('#vault-cook-directory-modal').modal('hide');\n        $('#vault-cook-revision-modal').modal('hide');\n        window.location = Urls.browse_vault();\n      })\n      .catch(() => {\n        $('#vault-cook-directory-modal').modal('hide');\n        $('#vault-cook-revision-modal').modal('hide');\n      });\n  } else {\n    window.location = Urls.browse_vault();\n  }\n}\n\nfunction validateEmail(email) {\n  let re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport function cookDirectoryArchive(directoryId) {\n  let email = $('#swh-vault-directory-email').val().trim();\n  if (!email || validateEmail(email)) {\n    let cookingTask = {'object_type': 'directory',\n      'object_id': directoryId,\n      'email': email,\n      'status': 'new'};\n    addVaultCookingTask(cookingTask);\n\n  } else {\n    $('#invalid-email-modal').modal('show');\n  }\n}\n\nexport function cookRevisionArchive(revisionId) {\n  let email = $('#swh-vault-revision-email').val().trim();\n  if (!email || validateEmail(email)) {\n    let cookingTask = {\n      'object_type': 'revision',\n      'object_id': revisionId,\n      'email': email,\n      'status': 'new'\n    };\n    addVaultCookingTask(cookingTask);\n  } else {\n    $('#invalid-email-modal').modal('show');\n  }\n}\n\nexport function initTaskCreationUi() {\n\n  // reparent the modals to the top navigation div in order to be able\n  // to display them\n  $(document).ready(function() {\n    $('.swh-browse-top-navigation').append($('#vault-cook-directory-modal'));\n    $('.swh-browse-top-navigation').append($('#vault-cook-revision-modal'));\n    $('.swh-browse-top-navigation').append($('#invalid-email-modal'));\n  });\n\n}\n","/**\n * Copyright (C) 2018  The Software Heritage developers\n * See the AUTHORS file at the top-level directory of this distribution\n * License: GNU Affero General Public License version 3, or any later version\n * See top-level LICENSE file for more information\n */\n\n// bundle for the vault related views\n\nimport './vault.css';\nexport * from './vault-ui';\nexport * from './vault-create-tasks';\n"],"sourceRoot":""}